
Comptes de test France Connect :
  sur l'IdP DGFIP :
    - 123 / 123
    - 1234567891011 / 123

Faire expirer la session et en recréer une : supprimer le cookie JSESSIONID et aller sur une page qui en recrée un : http://127.0.0.1/jsp-noauth/infos.jsp

https://fcp.integ01.dev-franceconnect.fr/api/v1/authorize?response_type=code&client_id=9ebf1ad9084207c5e4939bcc6c758c80f260ee70177a424e94754becefcb457e&scope=openid%20gender%20birthdate%20birthcountry%20birthplace%20given_name%20family_name%20email%20address%20preferred_username%20phone&redirect_uri=http%3A%2F%2F127.0.0.1%2Fopenid_connect_login&nonce=318c7e3638ee1&state=3a84b6919fea6&fc_internal=true
http://127.0.0.1/openid_connect_login?code=c9e3497985bdf1a6db6d9a87279f4aad54964942e3455ab9a6aa5808b94fc2fa&state=3a84b6919fea6

https://fcp.integ01.dev-franceconnect.fr/api/v1/authorize?response_type=code&client_id=9ebf1ad9084207c5e4939bcc6c758c80f260ee70177a424e94754becefcb457e&scope=openid+gender+birthdate+birthcountry+birthplace+given_name+family_name+email+address+preferred_username+phone&redirect_uri=http%3A%2F%2F127.0.0.1%2Fopenid_connect_login&nonce=3821711c9410d&state=347514d1b7c0
http://127.0.0.1/openid_connect_login?code=c9e3497985bdf1a6db6d9a87279f4aad54964942e3455ab9a6aa5808b94fc2fa&state=3a84b6919fea6

Définition : session expirée = le cookie de session du fournisseur de services n'est plus valable, n'est plus présent, ou une autre session a été crée avec un nouveau cookie de session
- phase d'authentification :

  - Si la session a expiré entre l'envoi vers France Connect et le retour avec le code d'autorisation (ex. de retour : http://127.0.0.1/openid_connect_login?code=1660c04e70db2b5311e6a7ab80c19246c3b7f123354d48c05f40d2aac3fb6c7b&state=2f3e7b5c97c0c), alors MITREid Connect renvoie une page d'erreur 401 avec le message suivant : "Authentication Failed: State parameter mismatch on return. Expected null got 2f3e7b5c97c0c".
    La valeur null indique que l'état associé à la session n'a pas pu être trouvé car il n'y a pas de session ou que cette session n'a jamais tenté de se connecter via France Connect.

  - Si un état ne correspondant pas à celui envoyé à France Connect dans le cadre de l'authentification de cette session (ex de retour : http://127.0.0.1/openid_connect_login?code=1660c04e70db2b5311e6a7ab80c19246c3b7f123354d48c05f40d2aac3fb6c7b&state=2f3e7b5c97c0c), alors MITREid Connect renvoie une page d'erreur 401 avec le message suivant : "Authentication Failed: State parameter mismatch on return. Expected 3f3222875114b got 2f3e7b5c97c0c".
    La valeur attendue (3f3222875114b) est celle du code envoyé à France Connect et le faux code reçu est 2f3e7b5c97c0c.

  - Si le code utilisé est faux ou a déjà été utilisé (pour le simuler, on crée par ex. "à la main" une URL avec le bon état mais on modifie le code : http://127.0.0.1/openid_connect_login?code=1660c04e70db2b5311e6a7ab80c19246c3b7f123354d48c05f40d2aac3fb6c7c&state=3f3222875114b), alors se produit l'échange suivant avec France Connect :
      - le fournisseur de service émet la requête suivante au token endpoint de France Connect :
          POST /api/v1/token HTTP/1.1
          Accept: text/plain, application/json, application/*+json, */*
          Content-Type: application/x-www-form-urlencoded
          Content-Length: 312
          Host: fcp.integ01.dev-franceconnect.fr
          Accept-Encoding: gzip,deflate

          grant_type=authorization_code&code=1660c04e70db2b5311e6a7ab80c19246c3b7f123354d48c05f40d2aac3fb6c7c&redirect_uri=http%3A%2F%2F127.0.0.1%2Fopenid_connect_login&client_id=CLIENT_ID&client_secret=SECRET_ID

       - France Connect signale que le code est invalide :
         HTTP/1.1 400 Bad Request
         Server: nginx
         Date: Wed, 20 Jul 2016 17:09:24 GMT
         Content-Type: application/json; charset=utf-8
         Content-Length: 27
         Connection: keep-alive
         ETag: W/"1b-BTGn9J/xQNk2eWB3zdcJSA"
         Vary: Accept-Encoding

       - le fournisseur de service répond donc au navigateur par une erreur 401 avec le message d'erreur suivant :
         "Authentication Failed: Unable to obtain Access Token: 400 Bad Request"

   - si le nonce reçu n'est pas le bon, une erreur indiquant une possible tentative de replay apparaît.

Toutes ces erreurs font suite à une exception de type org.springframework.security.authentication.AuthenticationServiceException levée dans org.mitre.openid.connect.client.OIDCAuthenticationFilter.



- phase de déconnexion (http://127.0.0.1/j_spring_security_logout) :
  Si la session a déjà expiré ou si une déconnexion s'est déjà produite, on renvoie vers l'URL configurée après déconnexion sans passer par France Connect puisqu'on ne dispose plus d'id token à lui indiquer.
  Ce cas se produit par exemple si deux onglets sont ouverts sur l'application et sont connectés via la même session, et que l'un des onglets a réalisé une déconnexion via le bouton France Connect. Si une déconnexion est alors initiée par le bouton France Connect du second onglet, il n'y a pas de contexte d'authentification, donc on ne peut ni ne doit renvoyer vers France Connect pour une déconnexion.










http://127.0.0.1/jsp-needauth/infos.jsp?toto=tata
TDL :
- logs
- fonction IdP

openssl aes-256-cbc -K abcdef -iv 1203242a -in attack-plan.txt -out message.enc
openssl aes-256-cbc -d -K abcdef -iv 1203242b -in message.enc -out plain-text.txt

IV : 128 bits (taille du bloc AES) = 128/8 bytes = 256/16=16 bytes
clé : 256 bits = 32 bytes

génération clé :
openssl rand -hex 32
a6a7ee7abe681c9c4cede8e3366a9ded96b92668ea5e26a31a4b0856341ed224

génération iv :
openssl rand -hex 16
87b7225d16ea2ae1f41d0b13fdce9bba

openssl rand -hex 16 | head -c 32 | read NONCE
echo nonce="$NONCE&http://fenyo.net/fc/identite.cgi"

KEY=a6a7ee7abe681c9c4cede8e3366a9ded96b92668ea5e26a31a4b0856341ed224
IV=87b7225d16ea2ae1f41d0b13fdce9bba
openssl rand -hex 16 | head -c 32 | read NONCE
echo nonce="$NONCE&http://fenyo.net/fc/identite.cgi" | openssl aes-256-cbc -K $KEY -iv $IV -a -A | read B64
echo '"'$B64'"' | jq '@uri' | tr '"' ' ' | read URLENC
echo "http://127.0.0.1/idp?msg=$URLENC"

http://127.0.0.1/idp?msg=Svbagkum1ck2n6GcHXQb3ktAtRo18S7KGOYCSdexZPaZqjaiAVkS8LaXEkLW9kE%2FcM53fmrVOEgc91SY6FEO6rwm%2FTb7T9ofRmnjv6uQ9wM%3D

http://127.0.0.1/idp?msg=Svbagkum1ck2n6GcHXQb3ktAtRo18S7KGOYCSdexZPaZqjaiAVkS8LaXEkLW9kE%2FcM53fmrVOEgc91SY6FEO6rwm%2FTb7T9ofRmnjv6uQ9wM%3D

entre jetty-9.3.8 et le déploiement de l appli :
jetty avec le bc importé par ... : timeout 70 sec
avec aucun bc : 10 sec
avec le nvx bc : 30 sec

------------------------------------------------------------

KEY=a6a7ee7abe681c9c4cede8e3366a9ded96b92668ea5e26a31a4b0856341ed224
IV=87b7225d16ea2ae1f41d0b13fdce9bba
openssl rand -hex 16 | head -c 32 | read NONCE
echo $NONCE
916a548bfd4d4f4525e71609351efa53
echo -n nonce="$NONCE&cb=http://fenyo.net/fc/identite.cgi" | openssl aes-256-cbc -K $KEY -iv $IV -a -A | read B64
echo $B64
qqZYoMpwUc0BFr+GeTwbLowXjaGVlqbx5g3N12Had6gtuQ67er++NAAUR4PqZQniDIJpEixUh4SRENF+2FHD/mIx3/TJBdV8UoWV0TS1JiY=
echo '"'$B64'"' | jq '@uri' | tr '"' ' ' | read URLENC
echo $URLENC
qqZYoMpwUc0BFr%2BGeTwbLowXjaGVlqbx5g3N12Had6gtuQ67er%2B%2BNAAUR4PqZQniDIJpEixUh4SRENF%2B2FHD%2FmIx3%2FTJBdV8UoWV0TS1JiY%3D
echo "http://127.0.0.1/idp?msg=$URLENC"
http://127.0.0.1/idp?msg=qqZYoMpwUc0BFr%2BGeTwbLowXjaGVlqbx5g3N12Had6gtuQ67er%2B%2BNAAUR4PqZQniDIJpEixUh4SRENF%2B2FHD%2FmIx3%2FTJBdV8UoWV0TS1JiY%3D

------------------------------------------------------------

 % ./idp-encrypt-url.sh

KEY=a6a7ee7abe681c9c4cede8e3366a9ded96b92668ea5e26a31a4b0856341ed224

KEY=a6a7ee7abe681c9c4cede8e3366a9ded

IV=87b7225d16ea2ae1f41d0b13fdce9bba
echo -n salut | openssl aes-256-cbc -K $KEY -iv $IV > ciphered.bin
hexdump -e '1/1 "%x"' < ciphered.bin
echo

ec3f222a891fb8b13a0cf32c3c654588




 % echo -n salut | openssl enc -aes-256-cbc -K a6a7ee7abe681c9c4cede8e3366a9ded -iv 87b7225d16ea2ae1f41d0b13fdce9bba -P
salt=0801000000000000
key=A6A7EE7ABE681C9C4CEDE8E3366A9DED00000000000000000000000000000000
iv =87B7225D16EA2AE1F41D0B13FDCE9BBA

 % echo -n salut | openssl enc -aes-128-cbc -K a6a7ee7abe681c9c4cede8e3366a9ded -iv 87b7225d16ea2ae1f41d0b13fdce9bba -P
salt=0001000000000000
key=A6A7EE7ABE681C9C4CEDE8E3366A9DED
iv =87B7225D16EA2AE1F41D0B13FDCE9BBA

 % echo -n salut | openssl enc -aes-128-cbc -K a6a7ee7abe681c9c4cede8e3366a9ded -iv 87b7225d16ea2ae1f41d0b13fdce9bba -a -A
oX5GocksjAm/OdtN8GxcgQ==
OK !!!!!!!!!!!

echo -n salut | openssl enc -aes-128-cbc -K a6a7ee7abe681c9c4cede8e3366a9ded -iv 87b7225d16ea2ae1f41d0b13fdce9bba | base64
oX5GocksjAm/OdtN8GxcgQ==

------------------------------------------------------------

KEY=a6a7ee7abe681c9c4cede8e3366a9ded96b92668ea5e26a31a4b0856341ed224
IV=87b7225d16ea2ae1f41d0b13fdce9bba

openssl rand -hex 16 | head -c 32 | read NONCE
echo '"http://fenyo.net/fc/identite.cgi?nonce=$NONCE"' | jq '@uri' | tr '"' ' ' | read URLENC
echo -n "$URLENC" | openssl aes-256-cbc -K $KEY -iv $IV | hexdump -v -e '1/1 "%02x"' | read HEX
echo "http://127.0.0.1/idp?msg=$HEX"

http://127.0.0.1/idp?msg=1d5429fb7e778753bf160d779c8aa0dc
http://127.0.0.1/idp?msg=1d5429fb7e778753bf160d779c8aa0dc

encodage de la chaîne de paramètres en UTF-8, puis chiffrement, puis transfo en hexa puis passage par méthode GET en paramètre msg
le param url est l'url de retour

------------------------------------------------------------

KEY=a6a7ee7abe681c9c4cede8e3366a9ded96b92668ea5e26a31a4b0856341ed224
IV=87b7225d16ea2ae1f41d0b13fdce9bba

STATE=23482302934
openssl rand -hex 16 | head -c 32 | read NONCE
echo "http://fenyo.net/fc/identite.cgi?nonce=$NONCE&state=$STATE" | read PLAINTEXT
echo -n "$PLAINTEXT" | openssl aes-256-cbc -K $KEY -iv $IV | hexdump -v -e '1/1 "%02x"' | read HEX
echo "http://127.0.0.1/idp?msg=$HEX"

http://127.0.0.1/idp?msg=dfa6a9446475984c6b89542fcdb4298e28713eb42875ef29c125bc9ae1b354f9031d9b2d1d5594bb8f6402e3adef2efecd578a9f8fd0719acd174b9a49bc2405b2eb914a43bb02107a31e077b4128e580be33f1c7f15b127a63e0c7a46402f42

encodage de la chaîne de paramètres en UTF-8, puis chiffrement, puis transfo en hexa puis passage par méthode GET en paramètre msg
le param url est l'url de retour

{"sub":"54f70a557d838bcd26abd22038126819299ef2048c01eab97a7a10545976ef98v1","gender":"male","birthdate":"1981-06-23","birthcountry":"99100","birthplace":"91272","given_name":"Eric","family_name":"Mercier","email":"eric.mercier@france.fr","address":{"formatted":"26 rue Desaix, 75015 Paris","street_address":"26 rue Desaix","locality":"Paris","region":"Ile-de-France","postal_code":"75015","country":"France"}}

décoder :
% echo -n b74f31907bb2d9be0ab2750c29dc4839061af809ada6217b237690a577f96f76d3f0f8633b28c8125aa89225b47930929e1e406a09ab6488614c312d51ddc8d61f924e11d0b7df694abc197706b9ff4cbbc398c31368c36b54adb232e8bb99ff06f587f97c72c7936d39261126531ce5d0fde886f48f01a3e6b4737f054b9b24acac6d0b6aec2c9d73b2a3e8fa5aee68819e33a083496e712a103bd6adb0abc83521c6c4e1e2d0e28ccf4f35c06c9473e399c258ee98775cda1c83b0c07eaa1072ba513ad7c301376899bd65cb77edc736eb8fff9fd3b41400c1cc455c6dbc6b9f9c8dc464e3f2327ee143f6aa22ee8e3900aba48c7a04998329cfbfc4119788b4b4a61441f059c5c5aa3dfa45de2676ffdfa38c5735c6e6711b2e531c2e11c283fc9fae15922c0ecfdb347fc83832bb88f5bf6820462f9fb683a7b6b0fa0225e5ac13c786eacba05caee8ea1ae97dbd7c851b7fd55fb62a4a30619829c4987a5d723a2f817711fd31996ef95d56500c257315b800f16688926786387d953d7cedd3a1f4e59e689ba0d3ecf61bb1b15063a4845a139c7c4268d37ac032ba180f > res
cat res | perl -pe 's/([0-9a-f]{2})/chr hex $1/gie' > res.bin
openssl aes-256-cbc -d -K $KEY -iv $IV < res.bin

nonce et state forcement dans l'URL de callback car rien ne doit être chiffré à partir de quelque chose qu'un utilisateur pourrait choisir, sinon il peut trouver les clés

obligations du fournisseur :
il ne faut pas que l'URL de callback puisse être forgée ou modifiée par un utilisateur : donc pas de param dépendant d'une entrée de l'utilisateur
il faut rajouter deux param : nonce et state
state à l'intérieur du jeton JSON d'info doivent être comparés à ceux qu'ils a créés

